


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         
   10 00000000         ; Declarações EQU - Defines
   11 00000000         ;<NOME>         EQU <VALOR>
   12 00000000         ; ========================
   13 00000000         
   14 00000000         ; ------------------------------------------------------
                       -------------------------
   15 00000000         ; Área de Dados - Declarações de variáveis
   16 00000000                 AREA             DATA, ALIGN=2
   17 00000000         ; Se alguma variável for chamada em outro arquivo
   18 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   19 00000000         ; partir de outro arquivo
   20 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   21 00000000         ; de <tam> bytes a partir da primeira 
   22 00000000         ; posição da RAM  
   23 00000000 00 00 00 
              00 00 00 
              00 00    count   SPACE            0x8
   24 00000008 00 00 00 
              00       step    SPACE            0x4
   25 0000000C 00      count_dir
                               SPACE            0x1
   26 0000000D         
   27 0000000D         ; ------------------------------------------------------
                       -------------------------
   28 0000000D         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   29 0000000D         ;                  código
   30 0000000D                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   31 00000000         
   32 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   33 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   34 00000000         ; outro arquivo. No caso startup.s
   35 00000000         
   36 00000000         ; Se chamar alguma função externa 
   37 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   38 00000000         ; função <func>
   39 00000000                 IMPORT           PLL_Init
   40 00000000                 IMPORT           SysTick_Init
   41 00000000                 IMPORT           SysTick_Wait1ms
   42 00000000                 IMPORT           GPIO_Init



ARM Macro Assembler    Page 2 


   43 00000000                 IMPORT           Enable7SegLeft
   44 00000000                 IMPORT           Enable7SegRight
   45 00000000                 IMPORT           EnableLEDs
   46 00000000                 IMPORT           GetPushBtnsState
   47 00000000                 IMPORT           DisableAllLEDs
   48 00000000         
   49 00000000         
   50 00000000         ; ------------------------------------------------------
                       -------------------------
   51 00000000         ; Função main()
   52 00000000         Start
   53 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   54 00000004 F7FF FFFE       BL               SysTick_Init
   55 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   56 0000000C F000 F852       BL               InitializeVars
   57 00000010         
   58 00000010         MainLoop
   59 00000010         
   60 00000010 F7FF FFFE       BL               GetPushBtnsState
   61 00000014 4584            CMP              R12,R0
   62 00000016 BF08            IT               EQ
   63 00000018 E010            BEQ              Branch
   64 0000001A 4684            MOV              R12, R0
   65 0000001C 492C            LDR              R1, =step
   66 0000001E 680A            LDR              R2,[R1]
   67 00000020 2801            CMP              R0, #2_01
   68 00000022 BF08            IT               EQ
   69 00000024 1C52            ADDEQ            R2, R2, #1
   70 00000026 2A09            CMP              R2, #9
   71 00000028 BF08            IT               EQ
   72 0000002A 2201            MOVEQ            R2,#1
   73 0000002C 700A            STRB             R2,[R1]
   74 0000002E         
   75 0000002E 4929            LDR              R1, =count_dir
   76 00000030 680A            LDR              R2,[R1]
   77 00000032 2802            CMP              R0, #2_10
   78 00000034 BF08            IT               EQ
   79 00000036 F082 0201       EOREQ            R2,R2,#1
   80 0000003A 700A            STRB             R2,[R1]
   81 0000003C         
   82 0000003C         Branch
   83 0000003C         
   84 0000003C 4926            LDR              R1, =count
   85 0000003E 680C            LDR              R4, [R1]
   86 00000040 4A23            LDR              R2, =step
   87 00000042 6815            LDR              R5, [R2]
   88 00000044 4B23            LDR              R3, =count_dir
   89 00000046 681E            LDR              R6, [R3]
   90 00000048         
   91 00000048 2E01            CMP              R6,#1
   92 0000004A BF0C            ITE              EQ
   93 0000004C 1964            ADDEQ            R4,R4,R5
   94 0000004E 1B64            SUBNE            R4,R4,R5
   95 00000050         



ARM Macro Assembler    Page 3 


   96 00000050 F04F 0063       MOV              R0, #99
   97 00000054 4284            CMP              R4, R0
   98 00000056 BFA8            IT               GE
   99 00000058 1A24            SUBGE            R4, R4,R0
  100 0000005A         
  101 0000005A         
  102 0000005A F04F 0000       MOV              R0, #0
  103 0000005E 4284            CMP              R4, R0
  104 00000060 F04F 0063       MOV              R0, #99
  105 00000064 BFB8            IT               LT
  106 00000066 1824            ADDLT            R4, R4, R0
  107 00000068         
  108 00000068 700C            STRB             R4,[R1]
  109 0000006A         
  110 0000006A         
  111 0000006A F04F 050A       MOV              R5,#10
  112 0000006E FBB4 F3F5       UDIV             R3, R4, R5
  113 00000072         
  114 00000072         
  115 00000072 4618            MOV              R0,R3
  116 00000074 F7FF FFFE       BL               Enable7SegLeft
  117 00000078 F7FF FFFE       BL               SysTick_Wait1ms
  118 0000007C F000 F812       BL               wait_200ms
  119 00000080         
  120 00000080         
  121 00000080 FB03 4015       MLS              R0, R3, R5, R4
  122 00000084         
  123 00000084 F7FF FFFE       BL               Enable7SegRight
  124 00000088 F7FF FFFE       BL               SysTick_Wait1ms
  125 0000008C F000 F80A       BL               wait_200ms
  126 00000090         
  127 00000090         
  128 00000090 4620            MOV              R0,R4
  129 00000092 F7FF FFFE       BL               EnableLEDs
  130 00000096 F7FF FFFE       BL               SysTick_Wait1ms
  131 0000009A F000 F803       BL               wait_200ms
  132 0000009E F7FF FFFE       BL               DisableAllLEDs
  133 000000A2         
  134 000000A2         
  135 000000A2         
  136 000000A2         
  137 000000A2 E7B5            B                MainLoop
  138 000000A4         
  139 000000A4         ;-------------------------------------------------------
                       -------------------------
  140 000000A4         wait_200ms
  141 000000A4         ; ****************************************
  142 000000A4         ;Função que cria um atraso de 0,5s entre o aperto do pus
                       hButton e seu tratamento
  143 000000A4         ; ****************************************
  144 000000A4 F04F 0064       MOV              R0, #100
  145 000000A8 B500            PUSH             {LR}
  146 000000AA F7FF FFFE       BL               SysTick_Wait1ms
  147 000000AE F85D EB04       POP              {LR}
  148 000000B2         
  149 000000B2 4770            BX               LR
  150 000000B4         
  151 000000B4         ;-------------------------------------------------------
                       -------------------------



ARM Macro Assembler    Page 4 


  152 000000B4         InitializeVars
  153 000000B4         ; ****************************************
  154 000000B4         
  155 000000B4 4908            LDR              R1, =count
  156 000000B6 F04F 0200       MOV              R2, #0
  157 000000BA 700A            STRB             R2,[R1]
  158 000000BC         
  159 000000BC 4904            LDR              R1, =step
  160 000000BE F04F 0201       MOV              R2, #1
  161 000000C2 700A            STRB             R2,[R1]
  162 000000C4         
  163 000000C4 4903            LDR              R1, =count_dir
  164 000000C6 F04F 0201       MOV              R2, #1
  165 000000CA 700A            STRB             R2,[R1]
  166 000000CC         
  167 000000CC 4770            BX               LR
  168 000000CE         
  169 000000CE         
  170 000000CE         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  171 000000CE         ; Fim do Arquivo
  172 000000CE         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  173 000000CE 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  174 000000D0                 END                          ;Fim do arquivo
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\DAELN\Downloads\
LabsMicrocontrolados-main\LAB01\RTE -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\D
evice\Include\TM4C129 -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1
" --predefine="__UVISION_VERSION SETA 518" --predefine="TM4C1294NCPDT SETA 1" -
-list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 16 in file main.s
   Uses
      None
Comment: DATA unused
count 00000000

Symbol: count
   Definitions
      At line 23 in file main.s
   Uses
      At line 84 in file main.s
      At line 155 in file main.s

count_dir 0000000C

Symbol: count_dir
   Definitions
      At line 25 in file main.s
   Uses
      At line 75 in file main.s
      At line 88 in file main.s
      At line 163 in file main.s

step 00000008

Symbol: step
   Definitions
      At line 24 in file main.s
   Uses
      At line 65 in file main.s
      At line 86 in file main.s
      At line 159 in file main.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: .text unused
Branch 0000003C

Symbol: Branch
   Definitions
      At line 82 in file main.s
   Uses
      At line 63 in file main.s
Comment: Branch used once
InitializeVars 000000B4

Symbol: InitializeVars
   Definitions
      At line 152 in file main.s
   Uses
      At line 56 in file main.s
Comment: InitializeVars used once
MainLoop 00000010

Symbol: MainLoop
   Definitions
      At line 58 in file main.s
   Uses
      At line 137 in file main.s
Comment: MainLoop used once
Start 00000000

Symbol: Start
   Definitions
      At line 52 in file main.s
   Uses
      At line 33 in file main.s
Comment: Start used once
wait_200ms 000000A4

Symbol: wait_200ms
   Definitions
      At line 140 in file main.s
   Uses
      At line 118 in file main.s
      At line 125 in file main.s
      At line 131 in file main.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DisableAllLEDs 00000000

Symbol: DisableAllLEDs
   Definitions
      At line 47 in file main.s
   Uses
      At line 132 in file main.s
Comment: DisableAllLEDs used once
Enable7SegLeft 00000000

Symbol: Enable7SegLeft
   Definitions
      At line 43 in file main.s
   Uses
      At line 116 in file main.s
Comment: Enable7SegLeft used once
Enable7SegRight 00000000

Symbol: Enable7SegRight
   Definitions
      At line 44 in file main.s
   Uses
      At line 123 in file main.s
Comment: Enable7SegRight used once
EnableLEDs 00000000

Symbol: EnableLEDs
   Definitions
      At line 45 in file main.s
   Uses
      At line 129 in file main.s
Comment: EnableLEDs used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 55 in file main.s
Comment: GPIO_Init used once
GetPushBtnsState 00000000

Symbol: GetPushBtnsState
   Definitions
      At line 46 in file main.s
   Uses
      At line 60 in file main.s
Comment: GetPushBtnsState used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 53 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 40 in file main.s
   Uses
      At line 54 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 41 in file main.s
   Uses
      At line 117 in file main.s
      At line 124 in file main.s
      At line 130 in file main.s
      At line 146 in file main.s

9 symbols
355 symbols in table
